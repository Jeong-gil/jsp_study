jsp는 서버프로그래밍 언어로서 기본적인 홈페이지에
게시판이나 로그인 및 회원가입 기능을 구현하고자 할 때 사용할 수 있다.

jsp는 다만 java라는 언어를 사용한다는 점에서 다른 서버프로그래밍 언어와 차이점이 명확하다.
jsp를 작동시키기 위해선 jdk가 필요하다.


java로 작성된 jsp를 실행시키려면 웹서버를 구축해야한다.
대표적으로 tomcat이 있다.


jsp는 대표적인 동적웹이다.


Bulletin Board System (전자게시판)


이클립스로 Dynamic Web Project 생성하면
여러가지 폴더가 만들어지는데,
WebContent 라는 폴더에 다양한 웹페이지들을 저장해 놓으면
브라우저로 접속해서 볼 수 있다.




=======================================================================================================================================================

자바빈즈 참고 사이트 :
https://dololak.tistory.com/133
https://dololak.tistory.com/531
https://dololak.tistory.com/532

참고 사이트 : https://m.blog.naver.com/start3535/30190419527

#자바빈의 설계 규약

 
 
자바빈을 작성하기 위해서는 설계규약을 따라야 한다. 만약 설계규약과 맞지 않는 경우 자바빈의 특성을 갖지 않는 클래스가 되어버릴수 있다.

1. 멤버변수마다 별도의 get/set 메소드가 존재해야 한다.

2. get 메소드는 매개변수가 존재하지 않아야한다.

3. set 메소드는 반드시 하나 이상의 매개변수가 존재해야 한다.

4. 생성자는 매개변수가 존재하지 않아야 한다.

5. 멤버변수의 접근제어자는 private이고 각 set/get메소드의 접근제어자는 public , 클래스의 접근제어자는 public 으로 정의한다.

=======================================================================================================================================================
=======================================================================================================================================================

참고 사이트 : https://developer-syubrofo.tistory.com/21

- 자바빈(JavaBean)이란?

자바로 작성된 컴포넌트들 즉, 클래스(Class)를 일반적으로 말합니다. 
JSP 프로그래밍에는 DTO(Data Transfer Object)나 DAO(Data Access Object)클래스의 객체를 JSP페이지에서 사용하기 위해 사용합니다. 
자바빈을 이용하여 프로그래밍을 하면 클래스의 객체 선언과 비즈니스 로직 등을 <% %> 스크립틀릿 영역에서 작성하지 않아서 가독성이 좋습니다. 


- 자바빈 사용하기

자바빈을 사용하기 위한 JSP 액션태그는 총 3가지가 있습니다.
(1) <jsp:useBean id="..." class="..." scope="..."/>
(2) <jsp:setProperty name="..." property="..."  value="..."/>
(3) <jsp:getProperty name="..." property="..."/>


(1) <jsp:useBean id="..." class="..." scope="..."/>
자바 객체를 생성하는 액션태그입니다. 
주의해야할 점은 useBean 액션 태그로 생성하는 객체의 클래스는 반드시 기본 생성자만을 가져야 합니다.
# id는 객체명을 지정하는 속성입니다.
# class는 생성할 객체의 클래스 경로명을 입력하시면 됩니다. 생략이 불가능합니다.
프로젝트에서 작성한 자바클래스를 사용할 경우 src안에 있는 패키지명.클래스 경로로 적어주시면 됩니다. 
# scope는 객체가 생명주기를 나타냅니다. 생략이 가능하며 default값은 page입니다.
(생명주기는 나중에 포스팅하겠습니다.) 


(2) <jsp:setProperty name="..." property="..." value="..."/>
생성된 객체의 setter메소드를 호출할 때 사용하는 액션태그입니다. 
# name은 useBean 액션태그로 생성된 객체의 이름을 입력합니다. 생략이 불가능합니다.
# property는 프로퍼티명을 지정합니다. 생략이 불가능합니다.
예를 들어 name을 입력할 경우, public void setName(String name){} 메소드가 호출되어 name값이 셋팅됩니다.
request객체를 통해 전달되는 모든 데이터를 받아야 할 경우에는 property="*"를 입력하시면 됩니다.
# value는 property에 전달할 값을 직접 넣어줄 경우 사용되는 속성입니다. 생략이 가능합니다. 
이 때 useBean으로 생성된 객체, 문자열등을 직접적으로 입력할 수 있습니다.


(3) <jsp:getProperty name="..." property="..."/>
생성된 객체의 getter메소드를 호출할 때 사용하는 액션태그입니다.
# name은 useBean 액션태그로 생성된 객체의 이름을 입력합니다. 생략이 불가능합니다.
# property는 프로퍼티명을 입력합니다. 생략이 불가능합니다.
입력된 프로퍼티의 상응하는 getter메소드가 호출됩니다.
사용할 때는 <%= %> 표현식 안에 입력하거나 String temp = <jsp:getProperty> 형식으로 사용합니다. 


- 생성된 객체의 setter, getter 메소드가 없을 경우 자바 코드처럼 객체명.메소드로 접근가능합니다.

=======================================================================================================================================================




JSP에서 회원데이터베이스 테이블에 접근할 수 있도록 하려면, 
DAO가 필요하다.
DAO는 데이터베이스 접근 객체의 약자이다.


세션이란?
세션이란 기본적으로 현재 접속한 회원에게 할당해주는 고유의 아이디이다.
